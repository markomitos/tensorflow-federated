diff --git tensorflow/tools/toolchains/cpus/aarch64/aarch64_compiler_configure.bzl tensorflow/tools/toolchains/cpus/aarch64/aarch64_compiler_configure.bzl
--- tensorflow/tools/toolchains/cpus/aarch64/aarch64_compiler_configure.bzl	(revision 5bc9d26649cca274750ad3625bd93422617eed4b)
+++ tensorflow/tools/toolchains/cpus/aarch64/aarch64_compiler_configure.bzl
@@ -2,7 +2,7 @@

 load("//tensorflow/tools/toolchains:cpus/aarch64/aarch64.bzl", "remote_aarch64_configure")
 load("//third_party/remote_config:remote_platform_configure.bzl", "remote_platform_configure")
-load("//third_party/py:python_configure.bzl", "remote_python_configure")
+load("//third_party/py/non_hermetic:python_configure.bzl", "remote_python_configure")

 def ml2014_tf_aarch64_configs(name_container_map, env):
     for name, container in name_container_map.items():
diff --git tensorflow/tools/toolchains/remote_config/rbe_config.bzl tensorflow/tools/toolchains/remote_config/rbe_config.bzl
--- tensorflow/tools/toolchains/remote_config/rbe_config.bzl	(revision 5bc9d26649cca274750ad3625bd93422617eed4b)
+++ tensorflow/tools/toolchains/remote_config/rbe_config.bzl
@@ -1,6 +1,6 @@
 """Macro that creates external repositories for remote config."""

-load("//third_party/py:python_configure.bzl", "local_python_configure", "remote_python_configure")
+load("//third_party/py/non_hermetic:python_configure.bzl", "local_python_configure", "remote_python_configure")
 load("//third_party/gpus:cuda_configure.bzl", "remote_cuda_configure")
 load("//third_party/nccl:nccl_configure.bzl", "remote_nccl_configure")
 load("//third_party/gpus:rocm_configure.bzl", "remote_rocm_configure")
diff --git tensorflow/workspace2.bzl tensorflow/workspace2.bzl
--- tensorflow/workspace2.bzl	(revision 5bc9d26649cca274750ad3625bd93422617eed4b)
+++ tensorflow/workspace2.bzl
@@ -37,7 +37,7 @@
 load("//third_party/nccl:nccl_configure.bzl", "nccl_configure")
 load("//third_party/opencl_headers:workspace.bzl", opencl_headers = "repo")
 load("//third_party/pasta:workspace.bzl", pasta = "repo")
-load("//third_party/py:python_configure.bzl", "python_configure")
+load("//third_party/py/non_hermetic:python_configure.bzl", "python_configure")
 load("//third_party/py/ml_dtypes:workspace.bzl", ml_dtypes = "repo")
 load("//third_party/pybind11_abseil:workspace.bzl", pybind11_abseil = "repo")
 load("//third_party/pybind11_bazel:workspace.bzl", pybind11_bazel = "repo")
diff --git third_party/py/non_hermetic/python_configure.bzl third_party/py/non_hermetic/python_configure.bzl
--- third_party/py/non_hermetic/python_configure.bzl	(revision 5bc9d26649cca274750ad3625bd93422617eed4b)
+++ third_party/py/non_hermetic/python_configure.bzl
@@ -203,7 +203,7 @@
     # Resolve all labels before doing any real work. Resolving causes the
     # function to be restarted with all previous state being lost. This
     # can easily lead to a O(n^2) runtime in the number of labels.
-    build_tpl = repository_ctx.path(Label("//third_party/py:BUILD.tpl"))
+    build_tpl = repository_ctx.path(Label("//third_party/py/non_hermetic:BUILD.tpl"))

     python_bin = get_python_bin(repository_ctx)
     _check_python_bin(repository_ctx, python_bin)
diff --git third_party/py/numpy/BUILD third_party/py/numpy/BUILD
--- third_party/py/numpy/BUILD	(revision 5bc9d26649cca274750ad3625bd93422617eed4b)
+++ third_party/py/numpy/BUILD
@@ -2,14 +2,15 @@

 package(default_visibility = ["//visibility:public"])

-alias(
+py_library(
     name = "numpy",
-    actual = "@pypi_numpy//:pkg",
+    srcs = ["tf_numpy_dummy.py"],
+    srcs_version = "PY3",
 )

 alias(
     name = "headers",
-    actual = "@pypi_numpy//:numpy_headers",
+    actual = "@local_config_python//:numpy_headers",
 )

 genrule(
